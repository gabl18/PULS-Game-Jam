[gd_scene load_steps=4 format=3 uid="uid://bagraegk311h0"]

[ext_resource type="PackedScene" uid="uid://c1g50h2avck3w" path="res://addons/maaacks_credits_scene/examples/scenes/credits/credits.tscn" id="1_885d8"]

[sub_resource type="GDScript" id="GDScript_rxqif"]
script/source = "@tool
extends Credits

@export_file(\"*.tscn\") var main_menu_scene : String
@onready var init_mouse_filter = mouse_filter

func _end_reached():
	%EndMessagePanel.show()
	mouse_filter = Control.MOUSE_FILTER_STOP
	Input.set_mouse_mode(Input.MOUSE_MODE_VISIBLE)
	super._end_reached()

func _on_MenuButton_pressed():
	get_tree().change_scene_to_file(main_menu_scene)
	# If Maaack's Scene Loader is installed, use this instead:
	# SceneLoader.load_scene(main_menu_scene)

func _on_ExitButton_pressed():
	get_tree().quit()

func _ready():
	if main_menu_scene.is_empty():
		%MenuButton.hide()
	if OS.has_feature(\"web\"):
		%ExitButton.hide()
	super._ready()

func reset():
	super.reset()
	%EndMessagePanel.hide()
	mouse_filter = init_mouse_filter

func _unhandled_input(event):
	if not enabled: return
	if event.is_action_pressed(\"ui_cancel\"):
		if not %EndMessagePanel.visible:
			_end_reached()
		else:
			get_tree().quit()
"

[sub_resource type="GDScript" id="GDScript_k3jvo"]
script/source = "class_name CaptureFocus
extends Container
## Node that captures UI focus for joypad users.
##
## This script assists with capturing UI focus for joypad users when
## opening, closing, or switching between menus.
## When attached to a node, it will check if it was changed to visible
## and a joypad is being used. If both are true, it will capture focus
## on the first eligible node in its scene tree.

## Hierarchical depth to search in the scene tree.
@export var search_depth : int = 1

func _focus_first_search(control_node : Control, levels : int = 1):
	if control_node == null or !control_node.is_visible_in_tree():
		return false
	if control_node.focus_mode == FOCUS_ALL:
		control_node.grab_focus()
		return true
	if levels < 1:
		return false
	var children = control_node.get_children()
	for child in children:
		if _focus_first_search(child, levels - 1):
			return true

func focus_first():
	_focus_first_search(self, search_depth)

func _check_visible_and_joypad():
	if is_visible_in_tree() and Input.get_connected_joypads().size() > 0:
		focus_first()

func _on_visibility_changed():
	call_deferred(\"_check_visible_and_joypad\")

func _ready():
	if is_inside_tree():
		_check_visible_and_joypad()
		connect(\"visibility_changed\", _on_visibility_changed)
"

[node name="EndCredits" instance=ExtResource("1_885d8")]
script = SubResource("GDScript_rxqif")
main_menu_scene = "uid://g48qs1vpmqtt"
attribution_file_path = "res://credits.md"

[node name="BackgroundColor" type="ColorRect" parent="." index="0"]
visible = false
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
color = Color(0.336608, 0.336608, 0.336608, 1)

[node name="BackgroundTextureRect" type="TextureRect" parent="." index="1"]
visible = false
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
expand_mode = 1
stretch_mode = 5

[node name="ScrollContainer" parent="." index="2"]
scroll_vertical = 0

[node name="CenterContainer" type="CenterContainer" parent="." index="3"]
visible = false
layout_mode = 0
anchor_right = 1.0
anchor_bottom = 1.0
size_flags_horizontal = 3
size_flags_vertical = 3
mouse_filter = 2

[node name="EndMessagePanel" type="Panel" parent="CenterContainer" index="0"]
unique_name_in_owner = true
visible = false
custom_minimum_size = Vector2(360, 120)
layout_mode = 2

[node name="VBoxContainer" type="VBoxContainer" parent="CenterContainer/EndMessagePanel" index="0"]
layout_mode = 0
anchor_right = 1.0
anchor_bottom = 1.0

[node name="ThankPlayer" type="Label" parent="CenterContainer/EndMessagePanel/VBoxContainer" index="0"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
text = "Thanks for playing!"
horizontal_alignment = 1
vertical_alignment = 1

[node name="CenterContainer" type="CenterContainer" parent="CenterContainer/EndMessagePanel/VBoxContainer" index="1"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="HBoxContainer" type="HBoxContainer" parent="CenterContainer/EndMessagePanel/VBoxContainer/CenterContainer" index="0"]
layout_mode = 2
size_flags_vertical = 3
theme_override_constants/separation = 24
script = SubResource("GDScript_k3jvo")

[node name="ExitButton" type="Button" parent="CenterContainer/EndMessagePanel/VBoxContainer/CenterContainer/HBoxContainer" index="0"]
unique_name_in_owner = true
custom_minimum_size = Vector2(60, 0)
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
text = "Exit"

[node name="MenuButton" type="Button" parent="CenterContainer/EndMessagePanel/VBoxContainer/CenterContainer/HBoxContainer" index="1"]
unique_name_in_owner = true
visible = false
custom_minimum_size = Vector2(60, 0)
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
text = "Menu"

[connection signal="pressed" from="CenterContainer/EndMessagePanel/VBoxContainer/CenterContainer/HBoxContainer/ExitButton" to="." method="_on_ExitButton_pressed"]
[connection signal="pressed" from="CenterContainer/EndMessagePanel/VBoxContainer/CenterContainer/HBoxContainer/MenuButton" to="." method="_on_MenuButton_pressed"]
